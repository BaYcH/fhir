<?xml version="1.0" encoding="UTF-8"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:html="http://www.w3.org/TR/REC-html40" xmlns:o="urn:schemas-microsoft-com:office:office">&#10; <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">&#10;  <Author>Grahame</Author>&#10;  <LastAuthor>Grahame Grieve</LastAuthor>&#10;  <Created>2012-03-21T19:16:26Z</Created>&#10;  <LastSaved>2017-10-30T09:45:41Z</LastSaved>&#10;  <Version>16.00</Version>&#10; </DocumentProperties>&#10; <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office">&#10;  <AllowPNG/>&#10; </OfficeDocumentSettings>&#10; <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">&#10;  &#10;  &#10;  &#10;  &#10;  <ActiveSheet>1</ActiveSheet>&#10;  <RefModeR1C1/>&#10;  <ProtectStructure>False</ProtectStructure>&#10;  <ProtectWindows>False</ProtectWindows>&#10; </ExcelWorkbook>&#10; <Styles>&#10;  <Style ss:ID="Default" ss:Name="Normal">&#10;   <Alignment ss:Vertical="Bottom"/>&#10;   <Borders/>&#10;   <Font ss:Color="#000000" ss:FontName="Calibri" ss:Size="11" x:Family="Swiss"/>&#10;   <Interior/>&#10;   <NumberFormat/>&#10;   <Protection/>&#10;  </Style>&#10;  <Style ss:ID="s62">&#10;   <Alignment ss:Vertical="Top" ss:WrapText="1"/>&#10;  </Style>&#10;  <Style ss:ID="s65">&#10;   <Alignment ss:Vertical="Top" ss:WrapText="1"/>&#10;   <Borders/>&#10;   <Font ss:Color="#000000" ss:FontName="Calibri" ss:Size="11" x:Family="Swiss"/>&#10;   <Interior/>&#10;   <NumberFormat/>&#10;   <Protection/>&#10;  </Style>&#10;  <Style ss:ID="s66">&#10;   <Borders/>&#10;   <Font ss:Color="#000000" ss:FontName="Calibri" ss:Size="11" x:Family="Swiss"/>&#10;   <Interior/>&#10;   <NumberFormat/>&#10;   <Protection/>&#10;  </Style>&#10;  <Style ss:ID="s67">&#10;   <Borders/>&#10;   <Font ss:FontName="Calibri" ss:Size="11" x:Family="Swiss"/>&#10;   <Interior/>&#10;   <NumberFormat/>&#10;   <Protection/>&#10;  </Style>&#10;  <Style ss:ID="s68">&#10;   <Alignment ss:Horizontal="Left" ss:Vertical="Top"/>&#10;  </Style>&#10;  <Style ss:ID="s69">&#10;   <Alignment ss:Horizontal="Left" ss:Vertical="Top" ss:WrapText="1"/>&#10;  </Style>&#10;  <Style ss:ID="s71">&#10;   <Alignment ss:Vertical="Top" ss:WrapText="1"/>&#10;   <Font ss:Color="#000000" ss:FontName="Calibri" ss:Size="11" x:Family="Swiss"/>&#10;  </Style>&#10; </Styles>&#10; <Worksheet ss:Name="Imports">&#10;  <Names>&#10;   <NamedRange ss:Name="boolean" ss:RefersTo="=Imports!R2C1"/>&#10;  </Names>&#10;  <Table ss:ExpandedColumnCount="9" ss:ExpandedRowCount="11" x:FullColumns="1" x:FullRows="1">&#10;   <Column ss:AutoFitWidth="0" ss:Width="67.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:Width="177.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:Width="362.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:Span="1" ss:StyleID="s62" ss:Width="117.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:Index="6" ss:StyleID="s62" ss:Width="181.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:StyleID="s62" ss:Width="184.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:Span="1" ss:StyleID="s62"/>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">Data Type</Data></Cell>&#10;    <Cell><Data ss:Type="String">Definition</Data></Cell>&#10;    <Cell><Data ss:Type="String">Comments</Data></Cell>&#10;    <Cell><Data ss:Type="String">Schema</Data></Cell>&#10;    <Cell><Data ss:Type="String">Json</Data></Cell>&#10;    <Cell><Data ss:Type="String">RegEx</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">v3</Data></Cell>&#10;    <Cell><Data ss:Type="String">v2</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">boolean</Data><NamedCell ss:Name="boolean"/></Cell>&#10;    <Cell><Data ss:Type="String">Value of "true" or "false"</Data></Cell>&#10;    <Cell ss:Index="4"><Data ss:Type="String">boolean</Data></Cell>&#10;    <Cell><Data ss:Type="String">boolean</Data></Cell>&#10;    <Cell><Data ss:Type="String"> true|false</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">BL</Data></Cell>&#10;    <Cell><Data ss:Type="String">n/a</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">integer</Data></Cell>&#10;    <Cell><Data ss:Type="String">A whole number</Data></Cell>&#10;    <Cell><Data ss:Type="String">32 bit number; for values larger than this, use decimal</Data></Cell>&#10;    <Cell><Data ss:Type="String">int</Data></Cell>&#10;    <Cell><Data ss:Type="String">number</Data></Cell>&#10;    <Cell><Data ss:Type="String" x:Ticked="1">-?([0]|([1-9][0-9]*))</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">INT</Data></Cell>&#10;    <Cell><Data ss:Type="String">~NM/~SI</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">decimal</Data></Cell>&#10;    <Cell><Data ss:Type="String">A rational number with implicit precision</Data></Cell>&#10;    <Cell><Data ss:Type="String">Do not use a IEEE type floating point type, instead use something that works like a true decimal, with inbuilt precision (e.g. Java BigInteger)</Data></Cell>&#10;    <Cell><Data ss:Type="String">decimal</Data></Cell>&#10;    <Cell><Data ss:Type="String">number</Data></Cell>&#10;    <Cell><Data ss:Type="String">-?([0]|([1-9][0-9]*))(\.[0-9]+)?</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">REAL</Data></Cell>&#10;    <Cell><Data ss:Type="String">~NM</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">base64Binary</Data></Cell>&#10;    <Cell><Data ss:Type="String">A stream of bytes</Data></Cell>&#10;    <Cell><Data ss:Type="String">A stream of bytes, base64 encoded</Data></Cell>&#10;    <Cell ss:StyleID="Default"><Data ss:Type="String">base64Binary</Data></Cell>&#10;    <Cell ss:StyleID="s65"><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">(\s*([0-9a-zA-Z\+/=]){4}\s*)+</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">BIN</Data></Cell>&#10;    <Cell><Data ss:Type="String">~ED</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">instant</Data></Cell>&#10;    <Cell><Data ss:Type="String">An instant in time - known at least to the second</Data></Cell>&#10;    <Cell><Data ss:Type="String">Note: This is intended for precisely observed times, typically system logs etc., and not human-reported times - for them, see date and dateTime below. Time zone is always required</Data></Cell>&#10;    <Cell><Data ss:Type="String">dateTime</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">TS</Data></Cell>&#10;    <Cell><Data ss:Type="String">DTM</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">A sequence of Unicode characters</Data></Cell>&#10;    <Cell><Data ss:Type="String">Note that FHIR strings SHALL not exceed 1MB in size</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell ss:StyleID="s65"><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">\s*(\S|\s)*</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">ST</Data></Cell>&#10;    <Cell><Data ss:Type="String">ST</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">uri</Data></Cell>&#10;    <Cell><Data ss:Type="String">String of characters used to identify a name or a resource</Data></Cell>&#10;    <Cell><Data ss:Type="String">see http://en.wikipedia.org/wiki/Uniform_resource_identifier</Data></Cell>&#10;    <Cell><Data ss:Type="String">anyURI</Data></Cell>&#10;    <Cell ss:StyleID="s65"><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">\S*</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">URL</Data></Cell>&#10;    <Cell><Data ss:Type="String">n/a</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0" ss:Height="59" ss:StyleID="s62">&#10;    <Cell><Data ss:Type="String">date</Data></Cell>&#10;    <Cell ss:StyleID="s66"><ss:Data xmlns="http://www.w3.org/TR/REC-html40" ss:Type="String"><Font html:Color="#000000">A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  </Font><B><Font html:Color="#000000">Dates SHALL be valid dates.</Font><Font>       </Font></B><Font>      </Font></ss:Data></Cell>&#10;    <Cell ss:Index="4"><Data ss:Type="String">xs:gYear, xs:gYearMonth, xs:date</Data></Cell>&#10;    <Cell ss:StyleID="s65"><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String" x:Ticked="1">([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?</Data></Cell>&#10;    <Cell><Data ss:Type="String">Could get fancy and check legal days/month or even leap years, but not worth it.</Data></Cell>&#10;    <Cell><Data ss:Type="String">TS</Data></Cell>&#10;    <Cell><Data ss:Type="String">DT</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0" ss:Height="110" ss:StyleID="s62">&#10;    <Cell><Data ss:Type="String">dateTime</Data></Cell>&#10;    <Cell ss:StyleID="s67"><ss:Data xmlns="http://www.w3.org/TR/REC-html40" ss:Type="String">       <Font html:Color="#000000">A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.  </Font><Font>       </Font><B>        <Font html:Color="#000000">Dates SHALL be valid dates.</Font><Font>       </Font></B><Font>      </Font></ss:Data></Cell>&#10;    <Cell ss:Index="4"><Data ss:Type="String">xs:gYear, xs:gYearMonth, xs:date, xs:dateTime</Data></Cell>&#10;    <Cell ss:StyleID="s65"><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String" x:Ticked="1">([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?</Data></Cell>&#10;    <Cell ss:Index="8"><Data ss:Type="String">TS</Data></Cell>&#10;    <Cell><Data ss:Type="String">DTM</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0" ss:Height="101" ss:StyleID="s68">&#10;    <Cell><Data ss:Type="String">time</Data></Cell>&#10;    <Cell><Data ss:Type="String">A time during the day, with no date specified </Data></Cell>&#10;    <Cell ss:Index="4" ss:StyleID="s69"><Data ss:Type="String">time</Data></Cell>&#10;    <Cell ss:StyleID="s65"><Data ss:Type="String">string</Data></Cell>&#10;    <Cell ss:StyleID="s69"><Data ss:Type="String" x:Ticked="1">([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?</Data></Cell>&#10;    <Cell ss:StyleID="s69"/>&#10;    <Cell ss:StyleID="s69"><Data ss:Type="String">n/a</Data></Cell>&#10;    <Cell ss:StyleID="s69"><Data ss:Type="String">TM</Data></Cell>&#10;   </Row>&#10;  </Table>&#10;  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">&#10;   <PageSetup>&#10;    <Header x:Margin="0.3"/>&#10;    <Footer x:Margin="0.3"/>&#10;    <PageMargins x:Bottom="0.75" x:Left="0.7" x:Right="0.7" x:Top="0.75"/>&#10;   </PageSetup>&#10;   &#10;   <Print>&#10;    <ValidPrinterInfo/>&#10;    <PaperSizeIndex>9</PaperSizeIndex>&#10;    <HorizontalResolution>-1</HorizontalResolution>&#10;    <VerticalResolution>-1</VerticalResolution>&#10;   </Print>&#10;   &#10;   <ProtectObjects>False</ProtectObjects>&#10;   <ProtectScenarios>False</ProtectScenarios>&#10;  </WorksheetOptions>&#10; </Worksheet>&#10; <Worksheet ss:Name="Patterns">&#10;  <Names>&#10;   <NamedRange ss:Name="code" ss:RefersTo="=Patterns!R2C1"/>&#10;   <NamedRange ss:Name="date" ss:RefersTo="=Imports!R9C1"/>&#10;   <NamedRange ss:Name="dateTime" ss:RefersTo="=Imports!R10C1"/>&#10;   <NamedRange ss:Name="id" ss:RefersTo="=Patterns!R5C1"/>&#10;   <NamedRange ss:Name="oid" ss:RefersTo="=Patterns!R3C1"/>&#10;   <NamedRange ss:Name="uuid" ss:RefersTo="=Patterns!R4C1"/>&#10;  </Names>&#10;  <Table ss:ExpandedColumnCount="8" ss:ExpandedRowCount="8" ss:StyleID="s71" x:FullColumns="1" x:FullRows="1">&#10;   <Column ss:AutoFitWidth="0" ss:StyleID="s71" ss:Width="74.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:StyleID="s71" ss:Width="233.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:Span="3" ss:StyleID="s71" ss:Width="142.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:Index="7" ss:StyleID="s71" ss:Width="199.0"/>&#10;   <Column ss:AutoFitWidth="0" ss:StyleID="s71" ss:Width="108.0"/>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">Data Type</Data></Cell>&#10;    <Cell><Data ss:Type="String">Definition</Data></Cell>&#10;    <Cell><Data ss:Type="String">Comments</Data></Cell>&#10;    <Cell><Data ss:Type="String">Base</Data></Cell>&#10;    <Cell><Data ss:Type="String">Schema</Data></Cell>&#10;    <Cell><Data ss:Type="String">Json</Data></Cell>&#10;    <Cell><Data ss:Type="String">RegEx</Data></Cell>&#10;    <Cell><Data ss:Type="String">Regex Comments</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0" ss:Height="30">&#10;    <Cell><Data ss:Type="String">code</Data><NamedCell ss:Name="code"/></Cell>&#10;    <Cell><Data ss:Type="String">A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents</Data></Cell>&#10;    <Cell ss:Index="4"><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">xs:token</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">[^\s]+(\s[^\s]+)*</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0" ss:Height="14">&#10;    <Cell><Data ss:Type="String">oid</Data><NamedCell ss:Name="oid"/></Cell>&#10;    <Cell><Data ss:Type="String">An OID represented as a URI</Data></Cell>&#10;    <Cell><Data ss:Type="String">RFC 3001. See also ISO/IEC 8824:1990 €</Data></Cell>&#10;    <Cell><Data ss:Type="String">uri</Data></Cell>&#10;    <Cell><Data ss:Type="String">xs:anyURI+</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">urn:oid:(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0" ss:Height="47">&#10;    <Cell><Data ss:Type="String">uuid</Data><NamedCell ss:Name="uuid"/></Cell>&#10;    <Cell><Data ss:Type="String">A UUID, represented as a URI</Data></Cell>&#10;    <Cell><Data ss:Type="String">See The Open Group, CDE 1.1 Remote Procedure Call specification, Appendix A.</Data></Cell>&#10;    <Cell><Data ss:Type="String">uri</Data></Cell>&#10;    <Cell><Data ss:Type="String">xs:anyURI+</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0" ss:Height="105">&#10;    <Cell><Data ss:Type="String">id</Data><NamedCell ss:Name="id"/></Cell>&#10;    <Cell><Data ss:Type="String">Any combination of letters, numerals, "-" and ".", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive.</Data></Cell>&#10;    <Cell><Data ss:Type="String">RFC 4122</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">xs:string+</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">[A-Za-z0-9\-\.]{1,64}</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">unsignedInt</Data></Cell>&#10;    <Cell><Data ss:Type="String">An integer with a value that is not negative (e.g. &gt;= 0)</Data></Cell>&#10;    <Cell ss:Index="4"><Data ss:Type="String">integer</Data></Cell>&#10;    <Cell><Data ss:Type="String">xs:nonNegativeInteger </Data></Cell>&#10;    <Cell><Data ss:Type="String">number</Data></Cell>&#10;    <Cell><Data ss:Type="String" x:Ticked="1">[0]|([1-9][0-9]*)</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">positiveInt</Data></Cell>&#10;    <Cell><Data ss:Type="String">An integer with a value that is positive (e.g. &gt;0)</Data></Cell>&#10;    <Cell ss:Index="4"><Data ss:Type="String">integer</Data></Cell>&#10;    <Cell><Data ss:Type="String">xs:positiveInteger</Data></Cell>&#10;    <Cell><Data ss:Type="String">number</Data></Cell>&#10;    <Cell><Data ss:Type="String">[1-9][0-9]*</Data></Cell>&#10;   </Row>&#10;   <Row ss:AutoFitHeight="0">&#10;    <Cell><Data ss:Type="String">markdown</Data></Cell>&#10;    <Cell><Data ss:Type="String">A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine</Data></Cell>&#10;    <Cell><Data ss:Type="String">Systems are not required to have markdown support, so the text should be readable without markdown processing. The markdown syntax is GFM - see https://github.github.com/gfm/</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell><Data ss:Type="String">xs:string</Data></Cell>&#10;    <Cell><Data ss:Type="String">string</Data></Cell>&#10;    <Cell ss:StyleID="s62"><Data ss:Type="String">\s*(\S|\s)*</Data></Cell>&#10;   </Row>&#10;  </Table>&#10;  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">&#10;   <PageSetup>&#10;    <Header x:Margin="0.3"/>&#10;    <Footer x:Margin="0.3"/>&#10;    <PageMargins x:Bottom="0.75" x:Left="0.7" x:Right="0.7" x:Top="0.75"/>&#10;   </PageSetup>&#10;   &#10;   <Print>&#10;    <ValidPrinterInfo/>&#10;    <PaperSizeIndex>9</PaperSizeIndex>&#10;    <HorizontalResolution>600</HorizontalResolution>&#10;    <VerticalResolution>600</VerticalResolution>&#10;   </Print>&#10;   <Selected/>&#10;   &#10;   <ProtectObjects>False</ProtectObjects>&#10;   <ProtectScenarios>False</ProtectScenarios>&#10;  </WorksheetOptions>&#10; </Worksheet>&#10;<!--canonicalized--></Workbook>