<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<hr />
<p>TODO</p>
<ol>
<li><p>Updates to "Managing Subscriptions and Errors"</p>
<ul>
<li>Discuss error codes (Extensible Codeable Concept)</li>
<li>Define basic error codes here</li>
<li>Need to discuss eventCount and error detection (insert appropriate examples/workflows)</li>
</ul></li>
<li><p>Updates to "Tracking Subscription Notifications" Should define what the AuditEvent looks like</p></li>
<li><p>Updates to "Channels" "REST Hook" `Replace “message” with “notification”</p></li>
<li><p>Updates to "Channels" "WebSockets" Replace “message” with “notification”</p></li>
<li><p>Updates to "Channels" "Email/SMS" ...</p></li>
<li><p>Updates to "Channels" "Messaging" ...</p></li>
</ol>
<hr />
<p><a name="subscription-notification"></a></p>
<h2 id="subscription-notification">Subscription Notification</h2>
<p>The three types of notifications which a server is able to send to a client are the <em>Event</em>, <em>Handshake</em> and <em>Heartbeat</em> notification. All of the notification types are <a href="bundle.html#history">history Bundles</a> with added extensions on the <code>Bundle.meta</code> element to define Subscription notification specific details.</p>
<p><em>TODO: In the following sections provide specific guidance for each channel types this including for REST Hooks + Web Sockets</em></p>
<p><a name="event-notification"></a></p>
<h3 id="event-notification">Event Notification</h3>
<p>The primary notification is a notification about an event.</p>
<ul>
<li><a href="subscription-example-notification-id-only.html">Example event notification</a></li>
</ul>
<p>The client expectations upon receipt of receipt of a Handshake notification are defined by each implementation.</p>
<p><a name="handshake-notification"></a></p>
<h3 id="handshake-notification">Handshake Notification</h3>
<p>When a connection to an Endpoint is established, the Server will send an empty History Bundle as a Handshake notification to the client.</p>
<ul>
<li><a href="subscription-example-handshake.html">Example handshake notification</a></li>
</ul>
<p>The client is not expected to take any special action in receipt of a Handshake notification beyond the channel requirements.</p>
<p><a name="heartbeat-notification"></a></p>
<h3 id="heartbeat-notification">Heartbeat Notification</h3>
<p>Servers may periodically send notifications across a channel to ensure that the connection is still alive and valid. The Heartbeat notification is an empty History Bundle sent without incrementing the subscription event count.</p>
<ul>
<li><a href="subscription-example-heartbeat.html">Example heartbeat notification</a></li>
</ul>
<p>The client is not expected to take any special action in receipt of a Heartbeat notification beyond the channel requirements.</p>
<p><a name="bundle-extensions-for-subscriptions"></a></p>
<h3 id="bundle-extensions-for-subscriptions">Bundle Extensions for Subscriptions</h3>
<ul>
<li><p>The <a href="extension-subscription-event-count.html">subscription-event-count</a> extension is used to indicate the number of times a notification has been attempted on this Subscription PRIOR to this notification being sent.</p>
<ul>
<li><p>In the case of a handshake, this count will always be zero (0).</p></li>
<li><p>In the case of a heartbeat notification, this count will be the same as the last notification and will not be incremented due to the heartbeat notification.</p></li>
<li><p>In the case of event notifications, the event count will be incremented by the number of notifications contained within this bundle (typically a single notification, though servers may choose to batch notifications within a short time interval).</p></li>
</ul></li>
</ul>
<!-- end list -->

<ul>
<li><p>The <a href="extension-bundle-event-count.html">bundle-event-count</a> extension represents the number of events ( event-notifications, notifications ??) within the Bundle. This is of particular interest in several ways:</p>
<ul>
<li><p>Determining if a notification requires further processing (e.g., discarding handshake and heartbeat)</p></li>
<li><p>Determining the number of events in <code>empty</code> payload scenarios</p></li>
<li><p>Server batching (e.g., a server sending at max one notification per second)</p></li>
<li><p>In the case of a handshake, this count will always be zero (0).</p></li>
</ul></li>
</ul>
<!-- end list -->

<ul>
<li><p>The <a href="extension-subscription-status.html">subscription-status</a> extension is used to represent the <a href="valueset-subscription-status.html">Subscription status values</a> at the time the notification is sent. Note that the status might change between the time the notification is sent and the time it is received/processed, and therefore this status recorded in the extension is not guaranteed to represent status of the Subscription at any time prior-to or after this notification is sent. The field is useful primarily as a hint to inform the client if the server has encountered errors in notifications immediately preceding this notification.</p></li>
<li><p>The <a href="extension-subscription-topic-url.html">subscription-topic-url</a> extension references the Topic resource relevant to this notification. The URL is an absolute references to the resource on the server that generated the notification and <em>NOT</em> a reference its canonical URL.</p></li>
<li><p>The <a href="extension-subscription-url.html">subscription-url</a> extension references the Subscription resource which triggered this notification. The URL is an absolute references to the resource on the server that generated the notification.</p></li>
</ul>
<p><a name="payloads"></a></p>
<h3 id="payloads">Payloads</h3>
<p>There are three options available when specifying the contents of a Notification: <code>empty</code>, <code>id-only</code>, and <code>full-resource</code>. These options change the amount of information conveyed in the notification bundle itself.</p>
<p>When deciding which payload type to request, the client should consider both ease in processing and security of PHI. If any untrusted hosts are included in processing notifications, it is <em>STRONGLY</em> recommended to use an <code>empty</code> payload to protect confidential health information.</p>
<p>Examples:</p>
<ul>
<li><a href="subscription-example-notification-empty.html">empty</a></li>
<li><a href="subscription-example-notification-id-only.html">id-only</a></li>
<li><a href="subscription-example-notification-full-resource.html">full-resource</a></li>
</ul>
<p><a name="channels"></a></p>
<h2 id="channels">Channels</h2>
<p><a name="rest-hook"></a></p>
<h3 id="rest-hook">REST Hook</h3>
<p>When a Subscription is created for a REST Hook channel type, the server MUST set initial status to <code>requested</code>, pending verification of the nominated endpoint URL. After a successful handshake notification has been sent and accepted, the server MUST update the status to <code>active</code>. Any errors in the initial handshake MUST result in the status being changed to <code>error</code>.</p>
<p>When the server processes an event meeting the specified criteria, the server POSTs an event notification to the client's nominated endpoint URL (i.e. to the <code>Subscription.channel[type=rest-hook].endpoint</code>) as shown in the following examples. The content-type of the POST MUST match the contentType (Subscription.channel.payload.contentType) requested during creation of the Subscription. Note that the server must append the headers, if any are given, to the POST request that it makes to the client.</p>
<p>This example uses an event notification with an empty payload to alert the subscriber that new results are available:</p>
<p>Request:</p>
<p><code>POST to [client endpoint]</code></p>
<p>Request Payload</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode json"><code class="sourceCode json"><a class="sourceLine" id="cb1-1" title="1">  <span class="fu">{</span></a>
<a class="sourceLine" id="cb1-2" title="2">    <span class="dt">&quot;resourceType&quot;</span><span class="fu">:</span> <span class="st">&quot;Bundle&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-3" title="3">    <span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;notification-empty&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-4" title="4">    <span class="dt">&quot;meta&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb1-5" title="5">      <span class="dt">&quot;extension&quot;</span><span class="fu">:</span> <span class="ot">[</span></a>
<a class="sourceLine" id="cb1-6" title="6">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb1-7" title="7">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-event-count&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-8" title="8">          <span class="dt">&quot;valueUnsignedInt&quot;</span><span class="fu">:</span> <span class="dv">1</span></a>
<a class="sourceLine" id="cb1-9" title="9">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb1-10" title="10">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb1-11" title="11">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/bundle-event-count&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-12" title="12">          <span class="dt">&quot;valueUnsignedInt&quot;</span><span class="fu">:</span> <span class="dv">1</span></a>
<a class="sourceLine" id="cb1-13" title="13">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb1-14" title="14">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb1-15" title="15">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-status&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-16" title="16">          <span class="dt">&quot;valueCode&quot;</span><span class="fu">:</span> <span class="st">&quot;active&quot;</span></a>
<a class="sourceLine" id="cb1-17" title="17">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb1-18" title="18">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb1-19" title="19">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-topic-url&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-20" title="20">          <span class="dt">&quot;valueUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/baseR4/Topic/admission&quot;</span></a>
<a class="sourceLine" id="cb1-21" title="21">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb1-22" title="22">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb1-23" title="23">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-url&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-24" title="24">          <span class="dt">&quot;valueUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/Subscription/cb2dce51-a1f5-40b4-a98b-c934eae368e8&quot;</span></a>
<a class="sourceLine" id="cb1-25" title="25">        <span class="fu">}</span></a>
<a class="sourceLine" id="cb1-26" title="26">      <span class="ot">]</span></a>
<a class="sourceLine" id="cb1-27" title="27">    <span class="fu">},</span></a>
<a class="sourceLine" id="cb1-28" title="28">    <span class="dt">&quot;type&quot;</span><span class="fu">:</span> <span class="st">&quot;history&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb1-29" title="29">    <span class="dt">&quot;timestamp&quot;</span><span class="fu">:</span> <span class="st">&quot;2019-08-07T10:24:13.1882432-05:00&quot;</span></a>
<a class="sourceLine" id="cb1-30" title="30">  <span class="fu">}</span></a></code></pre></div>
<p>Since the content element is set to <code>empty</code>, the data in the resources is only available through the REST API which helps consolidate authorization and authentication logic. When the subscriber receives a POST to its nominated endpoint it may queries the server to fetch all the relevant resources based on the Topic. The parameter <code>&amp;_since=:last</code> (where :last is replaced by the time at which the client last checked) may be appended to the query fetch the most recent resources. For example, in this example the topic is patient admission, and the subscriber may fetch the most recent Encounters for a patient or group of patients.</p>
<p>In this example, the event notification contains the only the ids for resource. This provide the subscriber with the id for fetching the data.</p>
<p>Request:</p>
<p><code>POST to [client endpoint]</code></p>
<p>Request Payload</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode json"><code class="sourceCode json"><a class="sourceLine" id="cb2-1" title="1">  <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-2" title="2">    <span class="dt">&quot;resourceType&quot;</span><span class="fu">:</span> <span class="st">&quot;Bundle&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-3" title="3">    <span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;notification-id-only&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-4" title="4">    <span class="dt">&quot;meta&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-5" title="5">      <span class="dt">&quot;extension&quot;</span><span class="fu">:</span> <span class="ot">[</span></a>
<a class="sourceLine" id="cb2-6" title="6">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-7" title="7">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-event-count&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-8" title="8">          <span class="dt">&quot;valueUnsignedInt&quot;</span><span class="fu">:</span> <span class="dv">2</span></a>
<a class="sourceLine" id="cb2-9" title="9">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb2-10" title="10">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-11" title="11">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/bundle-event-count&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-12" title="12">          <span class="dt">&quot;valueUnsignedInt&quot;</span><span class="fu">:</span> <span class="dv">1</span></a>
<a class="sourceLine" id="cb2-13" title="13">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb2-14" title="14">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-15" title="15">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-status&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-16" title="16">          <span class="dt">&quot;valueCode&quot;</span><span class="fu">:</span> <span class="st">&quot;active&quot;</span></a>
<a class="sourceLine" id="cb2-17" title="17">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb2-18" title="18">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-19" title="19">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-topic-url&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-20" title="20">          <span class="dt">&quot;valueUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/baseR4/Topic/admission&quot;</span></a>
<a class="sourceLine" id="cb2-21" title="21">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb2-22" title="22">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-23" title="23">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-url&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-24" title="24">          <span class="dt">&quot;valueUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/Subscription/cb2dce51-a1f5-40b4-a98b-c934eae368e8&quot;</span></a>
<a class="sourceLine" id="cb2-25" title="25">        <span class="fu">}</span></a>
<a class="sourceLine" id="cb2-26" title="26">      <span class="ot">]</span></a>
<a class="sourceLine" id="cb2-27" title="27">    <span class="fu">},</span></a>
<a class="sourceLine" id="cb2-28" title="28">    <span class="dt">&quot;type&quot;</span><span class="fu">:</span> <span class="st">&quot;history&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-29" title="29">    <span class="dt">&quot;timestamp&quot;</span><span class="fu">:</span> <span class="st">&quot;2019-08-07T10:24:13.1882432-05:00&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-30" title="30">    <span class="dt">&quot;entry&quot;</span><span class="fu">:</span> <span class="ot">[</span></a>
<a class="sourceLine" id="cb2-31" title="31">      <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-32" title="32">        <span class="dt">&quot;fullUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/baseR4/Encounter/2&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-33" title="33">        <span class="dt">&quot;request&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-34" title="34">          <span class="dt">&quot;method&quot;</span><span class="fu">:</span> <span class="st">&quot;PUT&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb2-35" title="35">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;Encounter/2&quot;</span></a>
<a class="sourceLine" id="cb2-36" title="36">        <span class="fu">},</span></a>
<a class="sourceLine" id="cb2-37" title="37">        <span class="dt">&quot;response&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb2-38" title="38">          <span class="dt">&quot;status&quot;</span><span class="fu">:</span> <span class="st">&quot;201&quot;</span></a>
<a class="sourceLine" id="cb2-39" title="39">        <span class="fu">}</span></a>
<a class="sourceLine" id="cb2-40" title="40">      <span class="fu">}</span></a>
<a class="sourceLine" id="cb2-41" title="41">    <span class="ot">]</span></a>
<a class="sourceLine" id="cb2-42" title="42">  <span class="fu">}</span></a></code></pre></div>
<p>Since the content element is set to <code>id-only</code>, like in the first scenario, the data in the resources is only available through the REST API which helps consolidate authorization and authentication logic. When the subscriber receives a POST to its nominated endpoint it may queries the server to fetch all the relevant resources using the supplied resource ids. For example, in this example the topic is patient admission, and the subscriber may fetch the Encounter(s) for a patient or group of patients.</p>
<p>In this example, the event notification contains the the entire resource. This is usually appropriate for defining routing rules within a managed eco-system such as a healthcare institution.</p>
<p>Request:</p>
<p><code>POST to [client endpoint]</code></p>
<p>Request Payload</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode json"><code class="sourceCode json"><a class="sourceLine" id="cb3-1" title="1"><span class="fu">{</span></a>
<a class="sourceLine" id="cb3-2" title="2">    <span class="dt">&quot;resourceType&quot;</span><span class="fu">:</span> <span class="st">&quot;Bundle&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-3" title="3">    <span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;notification-full-resource&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-4" title="4">    <span class="dt">&quot;meta&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-5" title="5">      <span class="dt">&quot;extension&quot;</span><span class="fu">:</span> <span class="ot">[</span></a>
<a class="sourceLine" id="cb3-6" title="6">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-7" title="7">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-event-count&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-8" title="8">          <span class="dt">&quot;valueUnsignedInt&quot;</span><span class="fu">:</span> <span class="dv">3</span></a>
<a class="sourceLine" id="cb3-9" title="9">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb3-10" title="10">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-11" title="11">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/bundle-event-count&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-12" title="12">          <span class="dt">&quot;valueUnsignedInt&quot;</span><span class="fu">:</span> <span class="dv">1</span></a>
<a class="sourceLine" id="cb3-13" title="13">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb3-14" title="14">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-15" title="15">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-status&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-16" title="16">          <span class="dt">&quot;valueCode&quot;</span><span class="fu">:</span> <span class="st">&quot;active&quot;</span></a>
<a class="sourceLine" id="cb3-17" title="17">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb3-18" title="18">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-19" title="19">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-topic-url&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-20" title="20">          <span class="dt">&quot;valueUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/baseR4/Topic/admission&quot;</span></a>
<a class="sourceLine" id="cb3-21" title="21">        <span class="fu">}</span><span class="ot">,</span></a>
<a class="sourceLine" id="cb3-22" title="22">        <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-23" title="23">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;http://hl7.org/fhir/StructureDefinition/subscription-url&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-24" title="24">          <span class="dt">&quot;valueUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/Subscription/cb2dce51-a1f5-40b4-a98b-c934eae368e8&quot;</span></a>
<a class="sourceLine" id="cb3-25" title="25">        <span class="fu">}</span></a>
<a class="sourceLine" id="cb3-26" title="26">      <span class="ot">]</span></a>
<a class="sourceLine" id="cb3-27" title="27">    <span class="fu">},</span></a>
<a class="sourceLine" id="cb3-28" title="28">    <span class="dt">&quot;type&quot;</span><span class="fu">:</span> <span class="st">&quot;history&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-29" title="29">    <span class="dt">&quot;timestamp&quot;</span><span class="fu">:</span> <span class="st">&quot;2019-08-07T10:24:13.1882432-05:00&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-30" title="30">    <span class="dt">&quot;entry&quot;</span><span class="fu">:</span> <span class="ot">[</span></a>
<a class="sourceLine" id="cb3-31" title="31">      <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-32" title="32">        <span class="dt">&quot;fullUrl&quot;</span><span class="fu">:</span> <span class="st">&quot;https://example.org/baseR4/Encounter/3&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-33" title="33">        <span class="dt">&quot;resource&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-34" title="34">          <span class="dt">&quot;resourceType&quot;</span><span class="fu">:</span> <span class="st">&quot;Encounter&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-35" title="35">          <span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;3&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-36" title="36">          <span class="dt">&quot;meta&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-37" title="37">            <span class="dt">&quot;versionId&quot;</span><span class="fu">:</span> <span class="st">&quot;1&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-38" title="38">            <span class="dt">&quot;lastUpdated&quot;</span><span class="fu">:</span> <span class="st">&quot;2019-08-07T10:49:22Z&quot;</span></a>
<a class="sourceLine" id="cb3-39" title="39">          <span class="fu">},</span></a>
<a class="sourceLine" id="cb3-40" title="40">          <span class="dt">&quot;status&quot;</span><span class="fu">:</span> <span class="st">&quot;in-progress&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-41" title="41">          <span class="dt">&quot;class&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-42" title="42">            <span class="dt">&quot;system&quot;</span><span class="fu">:</span> <span class="st">&quot;http://terminology.hl7.org/CodeSystem/v3-ActCode&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-43" title="43">            <span class="dt">&quot;code&quot;</span><span class="fu">:</span> <span class="st">&quot;VR&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-44" title="44">            <span class="dt">&quot;display&quot;</span><span class="fu">:</span> <span class="st">&quot;virtual&quot;</span></a>
<a class="sourceLine" id="cb3-45" title="45">          <span class="fu">},</span></a>
<a class="sourceLine" id="cb3-46" title="46">          <span class="dt">&quot;subject&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-47" title="47">            <span class="dt">&quot;reference&quot;</span><span class="fu">:</span> <span class="st">&quot;Patient/123&quot;</span></a>
<a class="sourceLine" id="cb3-48" title="48">          <span class="fu">}</span></a>
<a class="sourceLine" id="cb3-49" title="49">        <span class="fu">},</span></a>
<a class="sourceLine" id="cb3-50" title="50">        <span class="dt">&quot;request&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-51" title="51">          <span class="dt">&quot;method&quot;</span><span class="fu">:</span> <span class="st">&quot;PUT&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb3-52" title="52">          <span class="dt">&quot;url&quot;</span><span class="fu">:</span> <span class="st">&quot;Encounter/3&quot;</span></a>
<a class="sourceLine" id="cb3-53" title="53">        <span class="fu">},</span></a>
<a class="sourceLine" id="cb3-54" title="54">        <span class="dt">&quot;response&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb3-55" title="55">          <span class="dt">&quot;status&quot;</span><span class="fu">:</span> <span class="st">&quot;201&quot;</span></a>
<a class="sourceLine" id="cb3-56" title="56">        <span class="fu">}</span></a>
<a class="sourceLine" id="cb3-57" title="57">      <span class="fu">}</span></a>
<a class="sourceLine" id="cb3-58" title="58">    <span class="ot">]</span></a>
<a class="sourceLine" id="cb3-59" title="59">  <span class="fu">}</span></a></code></pre></div>
<p>This requests that a server forward a copy of any matching resource in JSON format to the nominated server as an <a href="http.html#update">Update operation</a> (i.e PUT) using the nominated URL as the <a href="http.html#root">service base</a>. In order to execute this channel, the server must know how to authenticate appropriately with the destination server. This can be done by the subscription resource providing an authentication header for the server to use, or alternatively, the server may be specifically configured to be able to use the nominated server.</p>
<p><a name="websockets"></a></p>
<h3 id="websockets">WebSockets</h3>
<p>Subscriptions are created exclusively via the FHIR REST API. But notifications need not occur via REST. Indeed, some subscribers may be unable to expose an outward-facing HTTP server to receive triggered notifications. For example, a pure client-side Web app or mobile app may want to subscribe to a data feed without polling using the /history operation. This can be accomplished using a websocket notification channel.</p>
<p>A client can declare its intention to listen via Web Sockets:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode json"><code class="sourceCode json"><a class="sourceLine" id="cb4-1" title="1"><span class="fu">{</span></a>
<a class="sourceLine" id="cb4-2" title="2">  <span class="dt">&quot;channel&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb4-3" title="3">  <span class="dt">&quot;type&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb4-4" title="4">    <span class="dt">&quot;coding&quot;</span><span class="fu">:</span> <span class="ot">[</span></a>
<a class="sourceLine" id="cb4-5" title="5">      <span class="fu">{</span></a>
<a class="sourceLine" id="cb4-6" title="6">        <span class="dt">&quot;system&quot;</span><span class="fu">:</span> <span class="st">&quot;http://terminology.hl7.org/CodeSystem/subscription-channel-type&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb4-7" title="7">        <span class="dt">&quot;code&quot;</span><span class="fu">:</span> <span class="st">&quot;websocket&quot;</span></a>
<a class="sourceLine" id="cb4-8" title="8">        <span class="fu">}</span></a>
<a class="sourceLine" id="cb4-9" title="9">      <span class="ot">]</span></a>
<a class="sourceLine" id="cb4-10" title="10">    <span class="fu">}</span></a>
<a class="sourceLine" id="cb4-11" title="11">  <span class="fu">}</span></a>
<a class="sourceLine" id="cb4-12" title="12"><span class="fu">}</span></a></code></pre></div>
<p>The subscriber would then initiate a Web Socket connection to the server, at a URL advertised in the FHIR server's Capability statement (subscriptions/webSocketUrl (todo)). A simple protocol is used to listen for notifications:</p>
<ul>
<li>Client connects a secure Web Socket to the server's webSocketUrl (see <a href="extension-capabilitystatement-websocket.html">websocket extension</a> in the server's <a href="capabilitystatement.html">CapabilityStatement</a>).</li>
<li>Client authenticates to server using a server-specified Web socket protocol (e.g. OAuth bearer token presentation).</li>
<li>Client sends a bind :id message over the socket (using the logical id of the subscription). For example, the client might issue: bind 123).</li>
<li>Server responds with a "bound :id" message to acknowledge.</li>
<li>Server sends a "ping :id" message to notify the client each time a new result is available</li>
</ul>
<p><a name="dstu"></a></p>
<blockquote>
<p><strong>STU Note:</strong> Warning: The WebSocket channel type is being examined to provide functional parity with other channel types. In particular, the current system fails to address authentication and a desire for multiple subscriptions to be available to a single WebSocket connection. More work is required.</p>
</blockquote>
<p><a name="sms"></a></p>
<h3 id="emailsms">Email/SMS</h3>
<p>A client can register for its user to receive notifications by email:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode json"><code class="sourceCode json"><a class="sourceLine" id="cb5-1" title="1">  <span class="fu">{</span></a>
<a class="sourceLine" id="cb5-2" title="2">     <span class="dt">&quot;channel&quot;</span><span class="fu">:{</span></a>
<a class="sourceLine" id="cb5-3" title="3">     <span class="dt">&quot;type&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb5-4" title="4">        <span class="dt">&quot;coding&quot;</span><span class="fu">:</span><span class="ot">[</span></a>
<a class="sourceLine" id="cb5-5" title="5">           <span class="fu">{</span></a>
<a class="sourceLine" id="cb5-6" title="6">              <span class="dt">&quot;system&quot;</span><span class="fu">:</span><span class="st">&quot;http://terminology.hl7.org/CodeSystem/subscription-channel-type&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb5-7" title="7">              <span class="dt">&quot;code&quot;</span><span class="fu">:</span><span class="st">&quot;email&quot;</span></a>
<a class="sourceLine" id="cb5-8" title="8">           <span class="fu">}</span></a>
<a class="sourceLine" id="cb5-9" title="9">        <span class="ot">]</span></a>
<a class="sourceLine" id="cb5-10" title="10">     <span class="fu">},</span></a>
<a class="sourceLine" id="cb5-11" title="11">     <span class="dt">&quot;endpoint&quot;</span><span class="fu">:</span><span class="st">&quot;mailto:mt-auburn-results@direct.biliwatch.com&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb5-12" title="12">     <span class="dt">&quot;header&quot;</span><span class="fu">:</span><span class="st">&quot;A new bilirubin result has arrived!&quot;</span></a>
<a class="sourceLine" id="cb5-13" title="13">  <span class="fu">}</span></a>
<a class="sourceLine" id="cb5-14" title="14">  <span class="fu">}</span></a></code></pre></div>
<p>The server would send a new message for each matching resource. The body of the email may be empty, or it may contain a reference to the search or the matching resource. It is at the discretion of the server as to how much information to provide. <code>Subscription.channel.header</code> sets the subject of the email. The email should be secured appropriately, such as using Direct, as specified by the rules of the applicable jurisdictions.</p>
<p>SMS works very similarly:</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode json"><code class="sourceCode json"><a class="sourceLine" id="cb6-1" title="1">  <span class="fu">{</span></a>
<a class="sourceLine" id="cb6-2" title="2">     <span class="dt">&quot;channel&quot;</span><span class="fu">:{</span></a>
<a class="sourceLine" id="cb6-3" title="3">     <span class="dt">&quot;type&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb6-4" title="4">        <span class="dt">&quot;coding&quot;</span><span class="fu">:</span><span class="ot">[</span></a>
<a class="sourceLine" id="cb6-5" title="5">           <span class="fu">{</span></a>
<a class="sourceLine" id="cb6-6" title="6">              <span class="dt">&quot;system&quot;</span><span class="fu">:</span><span class="st">&quot;http://terminology.hl7.org/CodeSystem/subscription-channel-type&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb6-7" title="7">              <span class="dt">&quot;code&quot;</span><span class="fu">:</span><span class="st">&quot;sms&quot;</span></a>
<a class="sourceLine" id="cb6-8" title="8">           <span class="fu">}</span></a>
<a class="sourceLine" id="cb6-9" title="9">        <span class="ot">]</span></a>
<a class="sourceLine" id="cb6-10" title="10">     <span class="fu">},</span></a>
<a class="sourceLine" id="cb6-11" title="11">     <span class="dt">&quot;endpoint&quot;</span><span class="fu">:</span><span class="st">&quot;tel:+1555-345-5555&quot;</span></a>
<a class="sourceLine" id="cb6-12" title="12">  <span class="fu">}</span></a>
<a class="sourceLine" id="cb6-13" title="13">  <span class="fu">}</span></a></code></pre></div>
<p>Note: SMS messages are extremely limited in size, so <code>channel.payload</code> will usually be omitted (signifying that no payload is to be sent). The recipient may be human, but this is not always the case. Irrespective of size, most servers will refuse to send payloads in SMS for security reasons, and may refuse to send emails unless encrypted.</p>
<p>A mime/type of text/plain can be useful for email and sms along with some extension describing how to convert resources to a text representation. This specification may provide supporting infrastructure for this in the future.</p>
<p><a name="dstu"></a></p>
<blockquote>
<p><strong>STU Note:</strong> Warning: The Email/SMS channel types are not yet defined in a highly standardized way, and may not be consistently support by servers. More work is required.</p>
</blockquote>
<p><a name="messaging"></a></p>
<h3 id="messaging">Messaging</h3>
<p>A client can register for its user to receive notifications by <a href="messaging.html">messaging</a>:</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode json"><code class="sourceCode json"><a class="sourceLine" id="cb7-1" title="1">  <span class="fu">{</span></a>
<a class="sourceLine" id="cb7-2" title="2">     <span class="dt">&quot;channel&quot;</span><span class="fu">:{</span></a>
<a class="sourceLine" id="cb7-3" title="3">     <span class="dt">&quot;type&quot;</span><span class="fu">:</span> <span class="fu">{</span></a>
<a class="sourceLine" id="cb7-4" title="4">        <span class="dt">&quot;coding&quot;</span><span class="fu">:</span><span class="ot">[</span></a>
<a class="sourceLine" id="cb7-5" title="5">           <span class="fu">{</span></a>
<a class="sourceLine" id="cb7-6" title="6">              <span class="dt">&quot;system&quot;</span><span class="fu">:</span><span class="st">&quot;http://terminology.hl7.org/CodeSystem/subscription-channel-type&quot;</span><span class="fu">,</span></a>
<a class="sourceLine" id="cb7-7" title="7">              <span class="dt">&quot;code&quot;</span><span class="fu">:</span><span class="st">&quot;sms&quot;</span></a>
<a class="sourceLine" id="cb7-8" title="8">           <span class="fu">}</span></a>
<a class="sourceLine" id="cb7-9" title="9">        <span class="ot">]</span></a>
<a class="sourceLine" id="cb7-10" title="10">     <span class="fu">},</span></a>
<a class="sourceLine" id="cb7-11" title="11">     <span class="dt">&quot;endpoint&quot;</span><span class="fu">:</span><span class="st">&quot;tel:+1555-345-5555&quot;</span></a>
<a class="sourceLine" id="cb7-12" title="12">  <span class="fu">}</span></a>
<a class="sourceLine" id="cb7-13" title="13">  <span class="fu">}</span></a></code></pre></div>
<p>For each matching resource, a server will send a message to the nominated end-point. Most servers will require that the end-point is white-listed prior to allowing these kinds of subscriptions.</p>
<p><a name="dstu"></a></p>
<blockquote>
<p><strong>STU Note:</strong> Warning: The Messaging channel type is not yet defined in a highly standardized way, and may not be consistently support by servers. More work is required.</p>
</blockquote>
<p><a name="safety"></a></p>
<h2 id="safety-and-security">Safety and Security</h2>
<p>Executing each of the channels documented in this specification involves the server sending a communication that will reveal information about the client and server relationship, and, if the entire resource is sent, administrative or clinical information that may be quite sensitive and/or protected under law. Servers are responsible for ensuring appropriate security is employed for each channel. The subscription resource does not address these concerns directly - it is assumed that these are administered by other configuration processes. For instance, a server might maintain a whitelist of acceptable servers for the rest-create/rest-update methods.</p>
<p>Emails should generally be secured using some technique such as <a href="http://directproject.org/">Direct</a>.</p>
<p><a name="errors"></a></p>
<h2 id="managing-subscriptions-and-errors">Managing Subscriptions and Errors</h2>
<p>The subscription resource is authored by the client with an initial status of "requested". A new subscription is created on the server using the RESTful create or update interaction. After a successful transaction, the client parses the Location header and saves the new Subscription's logical id for use in subsequent operations.</p>
<p>When the server receives a subscription, it SHOULD check that it is prepared to accept/process the subscription. If it is, it sets the subscription to <code>requested</code> and process it like a normal <a href="http.html#create">create</a>. If it isn't, it SHOULD return an error with an <a href="operationoutcome.html">OperationOutcome</a> instead of processing the <code>create</code>.</p>
<p>The criteria are subject to the same limitations as the client that created it, such as access to patient compartments etc. Note that the subscription remains active after the client access tokens expire.</p>
<p>Once the server has activated the subscription, it sets the status to <code>active</code> (note: the server may do this as it accepts the resource if it wants).</p>
<p>An appropriately authorized client can use search and/or history operations to see what subscriptions are currently active on the server. Once the subscription is no longer desired, the client deletes the subscription from the server.</p>
<p>The server may retry the notification a fixed number of times and/or refer errors to its own alert logs. If the notification fails, the server should set the status to <code>error</code> and mark the error in the resource. If the notification succeeds, the server should update the status to <code>active</code> and may remove any error codes. If a subscription fails consistently a server may choose set the subscription status to <code>off</code> and stop trying to send notifications.</p>
<p>If a subscription nominates a fixed end date, the server automatically deletes it at the specified time.</p>
<p><a name="tracking"></a></p>
<h2 id="tracking-subscription-notifications">Tracking Subscription Notifications</h2>
<p>Applications that wish to track whether notifications have been sent for particular resources (or versions of resources) can look at the AuditEvent resources. For example:</p>
<pre><code>GET [base]/AuditEvent?entity=Patient/103
</code></pre>
<p>This search will return all the AuditEvent resources that are about <a href="patient.html">Patient</a> <code>103</code>. At this time there is no deterministic way to tell say which of those AuditEvent resources come from the subscription sub-system that actually handles notifications. This is planned to be resolved in a future version of this specification. In the mean time, servers are encouraged to create AuditEvent records when performing notifications and document how clients can identify the relevant records when searching.</p>
<p>In addition, servers might also create <a href="communication.html">Communication</a> resources for some of the notifications that are sent in response to a subscription, such as when sending emails.</p>
<pre><code>GET [base]/Communication?based-on=Subscription/103
</code></pre>
<p>This returns a list of communications sent by a subscription. TODO: search on payload....</p>

</div>
