map "http://hl7.org/fhir/StructureMap/RiskAssessment2to3" = "R2 to R3 Conversions for RiskAssessment"

uses "http://hl7.org/fhir/DSTU2/StructureDefinition/RiskAssessment" alias RiskAssessmentR2 as source
uses "http://hl7.org/fhir/StructureDefinition/RiskAssessment" alias RiskAssessment as target

imports "http://hl7.org/fhir/StructureMap/primitives2to3"
imports "http://hl7.org/fhir/StructureMap/DomainResource2to3"
imports "http://hl7.org/fhir/StructureMap/Identifier2to3"
imports "http://hl7.org/fhir/StructureMap/Reference2to3"
imports "http://hl7.org/fhir/StructureMap/Period2to3"
imports "http://hl7.org/fhir/StructureMap/Range2to3"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept2to3"

group for type+types  RiskAssessment extends DomainResource
  input src : RiskAssessmentR2 as source
  input tgt : RiskAssessment as target

  "RiskAssessment-subject" : for src.subject make tgt.subject
  "RiskAssessment-condition" : for src.condition make tgt.condition
  "RiskAssessment-context" : for src.encounter make tgt.context
  "RiskAssessment-performer" : for src.performer make tgt.performer
  "RiskAssessment-identifier" : for src.identifier make tgt.identifier
  "RiskAssessment-method" : for src.method make tgt.method
  "RiskAssessment-basis" : for src.basis make tgt.basis
  "RiskAssessment-prediction" : for src.prediction as vs0 make tgt.prediction as vt0 then {
    "RiskAssessment.prediction-outcome" : for vs0.outcome make vt0.outcome
    "RiskAssessment.prediction-probability-decimal" : for vs0.probability : decimal as vs make vt0.probability = create("decimal") as vt then decimal(vs, vt)
    "RiskAssessment.prediction-probability-Range" : for vs0.probability : Range as vs make vt0.probability = create("Range") as vt then Range(vs, vt)
    "RiskAssessment.prediction-probability-CodeableConcept" : for vs0.probability : CodeableConcept as vs make vt0.probability = create("CodeableConcept") as vt then CodeableConcept(vs, vt)
    "RiskAssessment.prediction-relativeRisk" : for vs0.relativeRisk make vt0.relativeRisk
    "RiskAssessment.prediction-when-Period" : for vs0.when : Period as vs make vt0.when = create("Period") as vt then Period(vs, vt)
    "RiskAssessment.prediction-when-Range" : for vs0.when : Range as vs make vt0.when = create("Range") as vt then Range(vs, vt)
    "RiskAssessment.prediction-rationale" : for vs0.rationale make vt0.rationale
  }

  "RiskAssessment-mitigation" : for src.mitigation make tgt.mitigation

endgroup
