map "http://hl7.org/fhir/StructureMap/ValueSet2to3" = "R2 to R3 Conversions for ValueSet"

uses "http://hl7.org/fhir/StructureDefinition/ValueSet" as source
uses "http://hl7.org/fhir/StructureDefinition/ValueSetR2" as target


group ValueSet extends Element
  input src : ValueSetR2 as source
  input tgt : ValueSet as Target

  "ValueSet-url" : for src.url as vs make tgt.url as vt then uri(vs, vt)
  "ValueSet-identifier" : for src.identifier as vs make tgt.identifier as vt then Identifier(vs,vt)
  "ValueSet-version" : for src.version as vs make tgt.version as vt then string(vs, vt)
  "ValueSet-name" : for src.name as vs make tgt.name as vt then string(vs, vt)
  "ValueSet-status" : for src.status as vs make tgt.status as vt then code(vs, vt)
  "ValueSet-experimental" : for src.experimental as vs make tgt.experimental as vt then boolean(vs, vt)
  "ValueSet-publisher" : for src.publisher as vs make tgt.publisher as vt then string(vs, vt)
  "ValueSet-contact" : for src.contact as vs0 make tgt.contact = as vt0 then {
    "ContactDetail-name" : for vs0.name as vs make vt0.name as vt then string(vs, vt)
    "ContactDetail-telecom" : for vs0.telecom as vs make vt0.telecom as vt then ContactPoint(vs,vt)
  }
  "ValueSet-date" : for src.date as vs make tgt.date as vt then dateTime(vs, vt)
  "ValueSet-immutable" : for src.immutable as vs make tgt.immutable as vt then boolean(vs, vt)
  "ValueSet-extensible" : for src.extensible as vs make tgt.extensible as vt then boolean(vs, vt)
  "ValueSet-compose" : for src.compose as vs0 make tgt.compose = as vt0 then {
  }
  "ValueSet-expansion" : for src.expansion as vs0 make tgt.expansion = as vt0 then {
    "ValueSet.expansion-identifier" : for vs0.identifier as vs make vt0.identifier as vt then uri(vs, vt)
    "ValueSet.expansion-timestamp" : for vs0.timestamp as vs make vt0.timestamp as vt then dateTime(vs, vt)
    "ValueSet.expansion-total" : for vs0.total as vs make vt0.total as vt then integer(vs, vt)
    "ValueSet.expansion-offset" : for vs0.offset as vs make vt0.offset as vt then integer(vs, vt)
  }
endgroup

