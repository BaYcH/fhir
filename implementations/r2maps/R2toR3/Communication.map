map "http://hl7.org/fhir/StructureMap/Communication2to3" = "R2 to R3 Conversions for Communication"

uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Communication" alias CommunicationR2 as source
uses "http://hl7.org/fhir/StructureDefinition/Communication" alias Communication as target

imports "http://hl7.org/fhir/StructureMap/primitives2to3"
imports "http://hl7.org/fhir/StructureMap/DomainResource2to3"
imports "http://hl7.org/fhir/StructureMap/Attachment2to3"
imports "http://hl7.org/fhir/StructureMap/Identifier2to3"
imports "http://hl7.org/fhir/StructureMap/Reference2to3"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept2to3"

group for type+types  Communication extends DomainResource
  input src : CommunicationR2 as source
  input tgt : Communication as target

  "Communication-identifier" : for src.identifier make tgt.identifier
  "Communication-category" : for src.category make tgt.category
  "Communication-sender" : for src.sender make tgt.sender
  "Communication-recipient" : for src.recipient make tgt.recipient
  "Communication-payload" : for src.payload as vs0 make tgt.payload as vt0 then {
    "Communication.payload-content-string" : for vs0.content : string as vs make vt0.content = create("string") as vt then string(vs, vt)
    "Communication.payload-content-Attachment" : for vs0.content : Attachment as vs make vt0.content = create("Attachment") as vt then Attachment(vs, vt)
    "Communication.payload-content-Reference" : for vs0.content : Reference as vs make vt0.content = create("Reference") as vt then Reference(vs, vt)
  }

  "Communication-medium" : for src.medium make tgt.medium
  "Communication-status" : for src.status make tgt.status
  "Communication-context" : for src.encounter make tgt.context
  "Communication-sent" : for src.sent make tgt.sent
  "Communication-received" : for src.received make tgt.received
  "Communication-reason" : for src.reason make tgt.reason
  "Communication-subject" : for src.subject make tgt.subject

endgroup
