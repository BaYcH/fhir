map "http://hl7.org/fhir/StructureMap/Location2to3" = "R2 to R3 Conversions for Location"

uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Location" alias LocationR2 as source
uses "http://hl7.org/fhir/StructureDefinition/Location" alias Location as target

imports "http://hl7.org/fhir/StructureMap/primitives2to3"
imports "http://hl7.org/fhir/StructureMap/DomainResource2to3"
imports "http://hl7.org/fhir/StructureMap/Address2to3"
imports "http://hl7.org/fhir/StructureMap/ContactPoint2to3"
imports "http://hl7.org/fhir/StructureMap/Identifier2to3"
imports "http://hl7.org/fhir/StructureMap/Reference2to3"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept2to3"

group for type+types  Location extends DomainResource
  input src : LocationR2 as source
  input tgt : Location as target

  "Location-identifier" : for src.identifier make tgt.identifier
  "Location-status" : for src.status make tgt.status
  "Location-name" : for src.name make tgt.name
  "Location-description" : for src.description make tgt.description
  "Location-mode" : for src.mode make tgt.mode
  "Location-type" : for src.type make tgt.type
  "Location-telecom" : for src.telecom make tgt.telecom
  "Location-address" : for src.address make tgt.address
  "Location-physicalType" : for src.physicalType make tgt.physicalType
  "Location-position" : for src.position as vs0 make tgt.position as vt0 then {
    "Location.position-longitude" : for vs0.longitude make vt0.longitude
    "Location.position-latitude" : for vs0.latitude make vt0.latitude
    "Location.position-altitude" : for vs0.altitude make vt0.altitude
  }

  "Location-managingOrganization" : for src.managingOrganization make tgt.managingOrganization
  "Location-partOf" : for src.partOf make tgt.partOf

endgroup
