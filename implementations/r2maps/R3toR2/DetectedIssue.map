map "http://hl7.org/fhir/StructureMap/DetectedIssue3to2" = "R3 to R2 Conversion for DetectedIssue"


uses "http://hl7.org/fhir/StructureDefinition/DetectedIssue" alias DetectedIssue as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/DetectedIssue" alias DetectedIssueR2 as target

imports "http://hl7.org/fhir/StructureMap/primitives3to2"

imports "http://hl7.org/fhir/StructureMap/DomainResource3to2"
imports "http://hl7.org/fhir/StructureMap/Identifier3to2"
imports "http://hl7.org/fhir/StructureMap/Reference3to2"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept3to2"



group DetectedIssue extends DomainResource
  input src : DetectedIssue as source
  input tgt : DetectedIssueR2 as target

  "DetectedIssue-patient" : for src.patient as vs make tgt.patient as vt then Reference(vs,vt)
  "DetectedIssue-category" : for src.category as vs make tgt.category as vt then CodeableConcept(vs,vt)
  "DetectedIssue-severity" : for src.severity as vs make tgt.severity as vt then code(vs, vt)
  "DetectedIssue-implicated" : for src.implicated as vs make tgt.implicated as vt then Reference(vs,vt)
  "DetectedIssue-detail" : for src.detail as vs make tgt.detail as vt then string(vs, vt)
  "DetectedIssue-date" : for src.date as vs make tgt.date as vt then dateTime(vs, vt)
  "DetectedIssue-author" : for src.author as vs make tgt.author as vt then Reference(vs,vt)
  "DetectedIssue-identifier" : for src.identifier as vs make tgt.identifier as vt then Identifier(vs,vt)
  "DetectedIssue-reference" : for src.reference as vs make tgt.reference as vt then uri(vs, vt)
  "DetectedIssue-mitigation" : for src.mitigation as vs0 make tgt.mitigation as vt0 then {
    "DetectedIssue.mitigation-action" : for vs0.action as vs make vt0.action as vt then CodeableConcept(vs,vt)
    "DetectedIssue.mitigation-date" : for vs0.date as vs make vt0.date as vt then dateTime(vs, vt)
    "DetectedIssue.mitigation-author" : for vs0.author as vs make vt0.author as vt then Reference(vs,vt)
  }
endgroup

