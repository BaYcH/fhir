map "http://hl7.org/fhir/StructureMap/CommunicationRequest3to2" = "R3 to R2 Conversion for CommunicationRequest"

uses "http://hl7.org/fhir/StructureDefinition/CommunicationRequest" alias CommunicationRequest as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/CommunicationRequest" alias CommunicationRequestR2 as target

imports "http://hl7.org/fhir/StructureMap/primitives3to2"
imports "http://hl7.org/fhir/StructureMap/DomainResource3to2"
imports "http://hl7.org/fhir/StructureMap/Attachment3to2"
imports "http://hl7.org/fhir/StructureMap/Identifier3to2"
imports "http://hl7.org/fhir/StructureMap/Reference3to2"
imports "http://hl7.org/fhir/StructureMap/Period3to2"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept3to2"

group for type+types  CommunicationRequest extends DomainResource
  input src : CommunicationRequest as source
  input tgt : CommunicationRequestR2 as target

  "CommunicationRequest-identifier" : for src.identifier make tgt.identifier
  "CommunicationRequest-category" : for src.category make tgt.category
  "CommunicationRequest-sender" : for src.sender make tgt.sender
  "CommunicationRequest-recipient" : for src.recipient make tgt.recipient
  "CommunicationRequest-payload" : for src.payload as vs0 make tgt.payload as vt0 then {
    "CommunicationRequest.payload-content-string" : for vs0.content : string as vs make vt0.content = create("string") as vt then string(vs, vt)
    "CommunicationRequest.payload-content-Attachment" : for vs0.content : Attachment as vs make vt0.content = create("Attachment") as vt then Attachment(vs, vt)
    "CommunicationRequest.payload-content-Reference" : for vs0.content : Reference as vs make vt0.content = create("Reference") as vt then Reference(vs, vt)
  }

  "CommunicationRequest-medium" : for src.medium make tgt.medium
  "CommunicationRequest-requester" : for src.requester make tgt.requester
  "CommunicationRequest-status" : for src.status make tgt.status
  "CommunicationRequest-encounter" : for src.context make tgt.encounter
  "CommunicationRequest-scheduled-dateTime" : for src.scheduled : dateTime as vs make tgt.scheduled = create("dateTime") as vt then dateTime(vs, vt)
  "CommunicationRequest-scheduled-Period" : for src.scheduled : Period as vs make tgt.scheduled = create("Period") as vt then Period(vs, vt)
  "CommunicationRequest-reason" : for src.reason make tgt.reason
  "CommunicationRequest-requestedOn" : for src.requestedOn make tgt.requestedOn
  "CommunicationRequest-subject" : for src.subject make tgt.subject
  "CommunicationRequest-priority" : for src.priority make tgt.priority

endgroup
