map "http://hl7.org/fhir/StructureMap/Group3to2" = "R3 to R2 Conversion for Group"

uses "http://hl7.org/fhir/StructureDefinition/Group" alias Group as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Group" alias GroupR2 as target

imports "http://hl7.org/fhir/StructureMap/primitives3to2"
imports "http://hl7.org/fhir/StructureMap/DomainResource3to2"
imports "http://hl7.org/fhir/StructureMap/Identifier3to2"
imports "http://hl7.org/fhir/StructureMap/Reference3to2"
imports "http://hl7.org/fhir/StructureMap/Quantity3to2"
imports "http://hl7.org/fhir/StructureMap/Period3to2"
imports "http://hl7.org/fhir/StructureMap/Range3to2"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept3to2"

group for type+types  Group extends DomainResource
  input src : Group as source
  input tgt : GroupR2 as target

  "Group-identifier" : for src.identifier make tgt.identifier
  "Group-type" : for src.type make tgt.type
  "Group-actual" : for src.actual make tgt.actual
  "Group-code" : for src.code make tgt.code
  "Group-name" : for src.name make tgt.name
  "Group-quantity" : for src.quantity make tgt.quantity
  "Group-characteristic" : for src.characteristic as vs0 make tgt.characteristic as vt0 then {
    "Group.characteristic-code" : for vs0.code make vt0.code
    "Group.characteristic-value-CodeableConcept" : for vs0.value : CodeableConcept as vs make vt0.value = create("CodeableConcept") as vt then CodeableConcept(vs, vt)
    "Group.characteristic-value-boolean" : for vs0.value : boolean as vs make vt0.value = create("boolean") as vt then boolean(vs, vt)
    "Group.characteristic-value-Quantity" : for vs0.value : Quantity as vs make vt0.value = create("Quantity") as vt then Quantity(vs, vt)
    "Group.characteristic-value-Range" : for vs0.value : Range as vs make vt0.value = create("Range") as vt then Range(vs, vt)
    "Group.characteristic-exclude" : for vs0.exclude make vt0.exclude
    "Group.characteristic-period" : for vs0.period make vt0.period
  }

  "Group-member" : for src.member as vs0 make tgt.member as vt0 then {
    "Group.member-entity" : for vs0.entity make vt0.entity
    "Group.member-period" : for vs0.period make vt0.period
    "Group.member-inactive" : for vs0.inactive make vt0.inactive
  }


endgroup
