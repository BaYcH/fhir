map "http://hl7.org/fhir/StructureMap/Contract3to2" = "R3 to R2 Conversion for Contract"

uses "http://hl7.org/fhir/StructureDefinition/Contract" alias Contract as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Contract" alias ContractR2 as target

imports "http://hl7.org/fhir/StructureMap/primitives3to2"
imports "http://hl7.org/fhir/StructureMap/DomainResource3to2"
imports "http://hl7.org/fhir/StructureMap/Attachment3to2"
imports "http://hl7.org/fhir/StructureMap/Identifier3to2"
imports "http://hl7.org/fhir/StructureMap/Reference3to2"
imports "http://hl7.org/fhir/StructureMap/Period3to2"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept3to2"

group for type+types  Contract extends DomainResource
  input src : Contract as source
  input tgt : ContractR2 as target

  "Contract-identifier" : for src.identifier make tgt.identifier
  "Contract-issued" : for src.issued make tgt.issued
  "Contract-applies" : for src.applies make tgt.applies
  "Contract-subject" : for src.subject make tgt.subject
  "Contract-authority" : for src.authority make tgt.authority
  "Contract-domain" : for src.domain make tgt.domain
  "Contract-type" : for src.type make tgt.type
  "Contract-subType" : for src.subType make tgt.subType
  "Contract-action" : for src.action make tgt.action
  "Contract-actionReason" : for src.actionReason make tgt.actionReason
  "Contract-binding-Attachment" : for src.binding : Attachment as vs make tgt.binding = create("Attachment") as vt then Attachment(vs, vt)
  "Contract-binding-Reference" : for src.binding : Reference as vs make tgt.binding = create("Reference") as vt then Reference(vs, vt)

endgroup
