map "http://hl7.org/fhir/StructureMap/Subscription3to2" = "R3 to R2 Conversion for Subscription"


uses "http://hl7.org/fhir/StructureDefinition/Subscription" alias Subscription as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Subscription" alias SubscriptionR2 as target

imports "http://hl7.org/fhir/StructureMap/primitives3to2"
imports "http://hl7.org/fhir/StructureMap/ContactPoint3to2"
imports "http://hl7.org/fhir/StructureMap/Coding3to2"



group Subscription extends Element
  input src : Subscription as source
  input tgt : SubscriptionR2 as target
  "Subscription-criteria" : for src.criteria as vs make tgt.criteria as vt then string(vs, vt)
  "Subscription-contact" : for src.contact as vs make tgt.contact as vt then ContactPoint(vs,vt)
  "Subscription-reason" : for src.reason as vs make tgt.reason as vt then string(vs, vt)
  "Subscription-status" : for src.status as vs make tgt.status as vt then code(vs, vt)
  "Subscription-error" : for src.error as vs make tgt.error as vt then string(vs, vt)
  "Subscription-channel" : for src.channel as vs0 make tgt.channel as vt0 then {
    "Subscription.channel-type" : for vs0.type as vs make vt0.type as vt then code(vs, vt)
    "Subscription.channel-endpoint" : for vs0.endpoint as vs make vt0.endpoint as vt then uri(vs, vt)
    "Subscription.channel-payload" : for vs0.payload as vs make vt0.payload as vt then string(vs, vt)
    "Subscription.channel-header" : for vs0.header as vs make vt0.header as vt then string(vs, vt)
  }
  "Subscription-end" : for src.end as vs make tgt.end as vt then instant(vs, vt)
  "Subscription-tag" : for src.tag as vs make tgt.tag as vt then Coding(vs,vt)
endgroup

