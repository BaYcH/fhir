map "http://hl7.org/fhir/StructureMap/Condition3to2" = "R3 to R2 Conversion for Condition"

uses "http://hl7.org/fhir/StructureDefinition/Condition" alias Condition as source
uses "http://hl7.org/fhir/DSTU2/StructureDefinition/Condition" alias ConditionR2 as target

imports "http://hl7.org/fhir/StructureMap/primitives3to2"
imports "http://hl7.org/fhir/StructureMap/DomainResource3to2"
imports "http://hl7.org/fhir/StructureMap/Identifier3to2"
imports "http://hl7.org/fhir/StructureMap/Reference3to2"
imports "http://hl7.org/fhir/StructureMap/Period3to2"
imports "http://hl7.org/fhir/StructureMap/Range3to2"
imports "http://hl7.org/fhir/StructureMap/CodeableConcept3to2"

group for type+types  Condition extends DomainResource
  input src : Condition as source
  input tgt : ConditionR2 as target

  "Condition-identifier" : for src.identifier make tgt.identifier
  "Condition-patient" : for src.subject make tgt.patient
  "Condition-encounter" : for src.context make tgt.encounter
  "Condition-asserter" : for src.asserter make tgt.asserter
  "Condition-dateRecorded" : for src.assertedDate make tgt.dateRecorded
  "Condition-code" : for src.code make tgt.code
  "Condition-category" : for src.category make tgt.category
  "Condition-verificationStatus" : for src.verificationStatus make tgt.verificationStatus
  "Condition-severity" : for src.severity make tgt.severity
  "Condition-onset-dateTime" : for src.onset : dateTime as vs make tgt.onset = create("dateTime") as vt then dateTime(vs, vt)
  "Condition-onset-Period" : for src.onset : Period as vs make tgt.onset = create("Period") as vt then Period(vs, vt)
  "Condition-onset-Range" : for src.onset : Range as vs make tgt.onset = create("Range") as vt then Range(vs, vt)
  "Condition-onset-string" : for src.onset : string as vs make tgt.onset = create("string") as vt then string(vs, vt)
  "Condition-abatement-dateTime" : for src.abatement : dateTime as vs make tgt.abatement = create("dateTime") as vt then dateTime(vs, vt)
  "Condition-abatement-boolean" : for src.abatement : boolean as vs make tgt.abatement = create("boolean") as vt then boolean(vs, vt)
  "Condition-abatement-Period" : for src.abatement : Period as vs make tgt.abatement = create("Period") as vt then Period(vs, vt)
  "Condition-abatement-Range" : for src.abatement : Range as vs make tgt.abatement = create("Range") as vt then Range(vs, vt)
  "Condition-abatement-string" : for src.abatement : string as vs make tgt.abatement = create("string") as vt then string(vs, vt)
  "Condition-stage" : for src.stage as vs0 make tgt.stage as vt0 then {
    "Condition.stage-summary" : for vs0.summary make vt0.summary
    "Condition.stage-assessment" : for vs0.assessment make vt0.assessment
  }

  "Condition-evidence" : for src.evidence as vs0 make tgt.evidence as vt0 then {
    "Condition.evidence-code" : for vs0.code make vt0.code
    "Condition.evidence-detail" : for vs0.detail make vt0.detail
  }

  "Condition-bodySite" : for src.bodySite make tgt.bodySite

endgroup
