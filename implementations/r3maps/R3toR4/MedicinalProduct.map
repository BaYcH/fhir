map "http://hl7.org/fhir/StructureMap/MedicinalProduct2to3" = "R3 to R4 Conversions for MedicinalProduct"


uses "http://hl7.org/fhir/3.0/StructureDefinition/MedicinalProduct" alias MedicinalProductR3 as source
uses "http://hl7.org/fhir/StructureDefinition/MedicinalProduct" alias MedicinalProduct as target

imports "http://hl7.org/fhir/StructureMap/*3to4"



group MedicinalProduct extends DomainResource
  input src : MedicinalProductR3 as source
  input tgt : MedicinalProduct as target

  "MedicinalProduct.identifier": for src.identifier make tgt.identifier
  "MedicinalProduct.type": for src.type make tgt.type
  "MedicinalProduct.domain": for src.domain make tgt.domain
  "MedicinalProduct.combinedPharmaceuticalDoseForm": for src.combinedPharmaceuticalDoseForm make tgt.combinedPharmaceuticalDoseForm
  "MedicinalProduct.additionalMonitoringIndicator": for src.additionalMonitoringIndicator make tgt.additionalMonitoringIndicator
  "MedicinalProduct.specialMeasures": for src.specialMeasures make tgt.specialMeasures
  "MedicinalProduct.paediatricUseIndicator": for src.paediatricUseIndicator make tgt.paediatricUseIndicator
  "MedicinalProduct.productClassification": for src.productClassification make tgt.productClassification
  "MedicinalProduct.marketingAuthorization": for src.marketingAuthorization make tgt.marketingAuthorization
  "MedicinalProduct.packagedMedicinalProduct": for src.packagedMedicinalProduct make tgt.packagedMedicinalProduct
  "MedicinalProduct.pharmaceuticalProduct": for src.pharmaceuticalProduct make tgt.pharmaceuticalProduct
  "MedicinalProduct.clinicalParticulars": for src.clinicalParticulars make tgt.clinicalParticulars
  "MedicinalProduct.attachedDocument": for src.attachedDocument make tgt.attachedDocument
  "MedicinalProduct.masterFile": for src.masterFile make tgt.masterFile
  "MedicinalProduct.contact": for src.contact make tgt.contact
  "MedicinalProduct.clinicalTrial": for src.clinicalTrial make tgt.clinicalTrial
  "MedicinalProduct.name": for src.name as s make tgt.name as t then MedicinalProductName(s,t)
  "MedicinalProduct.crossReference": for src.crossReference make tgt.crossReference
  "MedicinalProduct.manufacturingBusinessOperation": for src.manufacturingBusinessOperation as s make tgt.manufacturingBusinessOperation as t then MedicinalProductManufacturingBusinessOperation(s,t)
  "MedicinalProduct.orphanDesignation": for src.orphanDesignation as s make tgt.orphanDesignation as t then MedicinalProductOrphanDesignation(s,t)
endgroup


group MedicinalProductName extends BackboneElement
  input src : MedicinalProductR3 as source
  input tgt : MedicinalProduct as target

  "MedicinalProduct.name.fullName": for src.fullName make tgt.fullName
  "MedicinalProduct.name.namePart": for src.namePart as s make tgt.namePart as t then MedicinalProductNameNamePart(s,t)
  "MedicinalProduct.name.countryLanguage": for src.countryLanguage as s make tgt.countryLanguage as t then MedicinalProductNameCountryLanguage(s,t)
endgroup


group MedicinalProductNameNamePart extends BackboneElement
  input src : MedicinalProductR3 as source
  input tgt : MedicinalProduct as target

  "MedicinalProduct.name.namePart.part": for src.part make tgt.part
  "MedicinalProduct.name.namePart.type": for src.type make tgt.type
endgroup


group MedicinalProductNameCountryLanguage extends BackboneElement
  input src : MedicinalProductR3 as source
  input tgt : MedicinalProduct as target

  "MedicinalProduct.name.countryLanguage.country": for src.country make tgt.country
  "MedicinalProduct.name.countryLanguage.jurisdiction": for src.jurisdiction make tgt.jurisdiction
  "MedicinalProduct.name.countryLanguage.language": for src.language make tgt.language
endgroup


group MedicinalProductManufacturingBusinessOperation extends BackboneElement
  input src : MedicinalProductR3 as source
  input tgt : MedicinalProduct as target

  "MedicinalProduct.manufacturingBusinessOperation.operationType": for src.operationType make tgt.operationType
  "MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber": for src.authorisationReferenceNumber make tgt.authorisationReferenceNumber
  "MedicinalProduct.manufacturingBusinessOperation.effectiveDate": for src.effectiveDate make tgt.effectiveDate
  "MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator": for src.confidentialityIndicator make tgt.confidentialityIndicator
  "MedicinalProduct.manufacturingBusinessOperation.manufacturer": for src.manufacturer make tgt.manufacturer
  "MedicinalProduct.manufacturingBusinessOperation.regulator": for src.regulator make tgt.regulator
endgroup


group MedicinalProductOrphanDesignation extends BackboneElement
  input src : MedicinalProductR3 as source
  input tgt : MedicinalProduct as target

  "MedicinalProduct.orphanDesignation.identifier": for src.identifier make tgt.identifier
  "MedicinalProduct.orphanDesignation.intendedUse": for src.intendedUse make tgt.intendedUse
  "MedicinalProduct.orphanDesignation.indication": for src.indication make tgt.indication
  "MedicinalProduct.orphanDesignation.status": for src.status make tgt.status
  "MedicinalProduct.orphanDesignation.date": for src.date make tgt.date
  "MedicinalProduct.orphanDesignation.species": for src.species make tgt.species
endgroup

