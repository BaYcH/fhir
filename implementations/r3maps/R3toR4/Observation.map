map "http://hl7.org/fhir/StructureMap/Observation3to4" = "R3 to R4 Conversions for Observation"


uses "http://hl7.org/fhir/3.0/StructureDefinition/Observation" alias ObservationR3 as source
uses "http://hl7.org/fhir/StructureDefinition/Observation" alias Observation as target

imports "http://hl7.org/fhir/StructureMap/*3to4"



group for type+types Observation extends DomainResource
  input src : ObservationR3 as source
  input tgt : Observation as target

  "Observation.identifier" : for src.identifier make tgt.identifier 
  "Observation.basedOn" : for src.basedOn make tgt.basedOn 
  "Observation.status" : for src.status make tgt.status 
  "Observation.category" : for src.category make tgt.category 
  "Observation.code" : for src.code make tgt.code 
  "Observation.subject" : for src.subject make tgt.subject 
  "Observation.context" : for src.context make tgt.context 
  "Observation.effective-dateTime" : for src.effective : dateTime as vs make tgt.effective = create("dateTime") as vt then dateTime(vs,vt)
  "Observation.effective-Period" : for src.effective : Period as vs make tgt.effective = create("Period") as vt then Period(vs,vt)
  "Observation.issued" : for src.issued make tgt.issued 
  "Observation.performer" : for src.performer make tgt.performer 
  "Observation.value-Quantity" : for src.value : Quantity as vs make tgt.value = create("Quantity") as vt then Quantity(vs,vt)
  "Observation.value-CodeableConcept" : for src.value : CodeableConcept as vs make tgt.value = create("CodeableConcept") as vt then CodeableConcept(vs,vt)
  "Observation.value-string" : for src.value : string as vs make tgt.value = create("string") as vt then string(vs,vt)
  "Observation.value-boolean" : for src.value : boolean as vs make tgt.value = create("boolean") as vt then boolean(vs,vt)
  "Observation.value-Range" : for src.value : Range as vs make tgt.value = create("Range") as vt then Range(vs,vt)
  "Observation.value-Ratio" : for src.value : Ratio as vs make tgt.value = create("Ratio") as vt then Ratio(vs,vt)
  "Observation.value-SampledData" : for src.value : SampledData as vs make tgt.value = create("SampledData") as vt then SampledData(vs,vt)
  "Observation.value-time" : for src.value : time as vs make tgt.value = create("time") as vt then time(vs,vt)
  "Observation.value-dateTime" : for src.value : dateTime as vs make tgt.value = create("dateTime") as vt then dateTime(vs,vt)
  "Observation.value-Period" : for src.value : Period as vs make tgt.value = create("Period") as vt then Period(vs,vt)
  "Observation.dataAbsentReason" : for src.dataAbsentReason make tgt.dataAbsentReason 
  "Observation.interpretation" : for src.interpretation make tgt.interpretation 
  "Observation.comment" : for src.comment make tgt.comment 
  "Observation.bodySite" : for src.bodySite make tgt.bodySite 
  "Observation.method" : for src.method make tgt.method 
  "Observation.specimen" : for src.specimen make tgt.specimen 
  "Observation.device" : for src.device make tgt.device 
  "Observation.referenceRange" : for src.referenceRange as vs0 make tgt.referenceRange as vt0 then {
    "Observation.referenceRange.low" : for vs0.low make vt0.low 
    "Observation.referenceRange.high" : for vs0.high make vt0.high 
    "Observation.referenceRange.type" : for vs0.type make vt0.type 
    "Observation.referenceRange.appliesTo" : for vs0.appliesTo make vt0.appliesTo 
    "Observation.referenceRange.age" : for vs0.age make vt0.age 
    "Observation.referenceRange.text" : for vs0.text make vt0.text 
  }
  "Observation.component" : for src.component as vs0 make tgt.component as vt0 then {
    "Observation.component.code" : for vs0.code make vt0.code 
    "Observation.component.value-Quantity" : for vs0.value : Quantity as vs make vt0.value = create("Quantity") as vt then Quantity(vs,vt)
    "Observation.component.value-CodeableConcept" : for vs0.value : CodeableConcept as vs make vt0.value = create("CodeableConcept") as vt then CodeableConcept(vs,vt)
    "Observation.component.value-string" : for vs0.value : string as vs make vt0.value = create("string") as vt then string(vs,vt)
    "Observation.component.value-Range" : for vs0.value : Range as vs make vt0.value = create("Range") as vt then Range(vs,vt)
    "Observation.component.value-Ratio" : for vs0.value : Ratio as vs make vt0.value = create("Ratio") as vt then Ratio(vs,vt)
    "Observation.component.value-SampledData" : for vs0.value : SampledData as vs make vt0.value = create("SampledData") as vt then SampledData(vs,vt)
    "Observation.component.value-time" : for vs0.value : time as vs make vt0.value = create("time") as vt then time(vs,vt)
    "Observation.component.value-dateTime" : for vs0.value : dateTime as vs make vt0.value = create("dateTime") as vt then dateTime(vs,vt)
    "Observation.component.value-Period" : for vs0.value : Period as vs make vt0.value = create("Period") as vt then Period(vs,vt)
    "Observation.component.dataAbsentReason" : for vs0.dataAbsentReason make vt0.dataAbsentReason 
    "Observation.component.interpretation" : for vs0.interpretation make vt0.interpretation 
  }
endgroup

