map "http://hl7.org/fhir/StructureMap/Patient4to3" = "R4 to R3 Conversion for Patient"


uses "http://hl7.org/fhir/StructureDefinition/Patient" alias Patient as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/Patient" alias PatientR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"



group for type+types Patient extends DomainResource
  input src : Patient as source
  input tgt : PatientR3 as target

  "Patient.identifier" : for src.identifier make tgt.identifier 
  "Patient.active" : for src.active make tgt.active 
  "Patient.name" : for src.name make tgt.name 
  "Patient.telecom" : for src.telecom make tgt.telecom 
  "Patient.gender" : for src.gender make tgt.gender 
  "Patient.birthDate" : for src.birthDate make tgt.birthDate 
  "Patient.deceased-boolean" : for src.deceased : boolean as vs make tgt.deceased = create("boolean") as vt then boolean(vs,vt)
  "Patient.deceased-dateTime" : for src.deceased : dateTime as vs make tgt.deceased = create("dateTime") as vt then dateTime(vs,vt)
  "Patient.address" : for src.address make tgt.address 
  "Patient.maritalStatus" : for src.maritalStatus make tgt.maritalStatus 
  "Patient.multipleBirth-boolean" : for src.multipleBirth : boolean as vs make tgt.multipleBirth = create("boolean") as vt then boolean(vs,vt)
  "Patient.multipleBirth-integer" : for src.multipleBirth : integer as vs make tgt.multipleBirth = create("integer") as vt then integer(vs,vt)
  "Patient.photo" : for src.photo make tgt.photo 
  "Patient.communication" : for src.communication as vs0 make tgt.communication as vt0 then {
    "Patient.communication.language" : for vs0.language make vt0.language 
    "Patient.communication.preferred" : for vs0.preferred make vt0.preferred 
  }
  "Patient.generalPractitioner" : for src.generalPractitioner make tgt.generalPractitioner 
  "Patient.managingOrganization" : for src.managingOrganization make tgt.managingOrganization 
  "Patient.link" : for src.link as vs0 make tgt.link as vt0 then {
    "Patient.link.other" : for vs0.other make vt0.other 
    "Patient.link.type" : for vs0.type make vt0.type 
  }
endgroup

