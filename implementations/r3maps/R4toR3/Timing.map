map "http://hl7.org/fhir/StructureMap/Timing4to3" = "R4 to R3 Conversion for Timing"


uses "http://hl7.org/fhir/StructureDefinition/Timing" alias Timing as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/Timing" alias TimingR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"



group for type+types Timing extends BackboneElement
  input src : Timing as source
  input tgt : TimingR3 as target

  "Timing.event" : for src.event make tgt.event 
  "Timing.repeat" : for src.repeat as vs0 make tgt.repeat as vt0 then {
    "Timing.repeat.bounds-Duration" : for vs0.bounds : Duration as vs make vt0.bounds = create("Duration") as vt then Duration(vs,vt)
    "Timing.repeat.bounds-Range" : for vs0.bounds : Range as vs make vt0.bounds = create("Range") as vt then Range(vs,vt)
    "Timing.repeat.bounds-Period" : for vs0.bounds : Period as vs make vt0.bounds = create("Period") as vt then Period(vs,vt)
    "Timing.repeat.count" : for vs0.count make vt0.count 
    "Timing.repeat.countMax" : for vs0.countMax make vt0.countMax 
    "Timing.repeat.duration" : for vs0.duration make vt0.duration 
    "Timing.repeat.durationMax" : for vs0.durationMax make vt0.durationMax 
    "Timing.repeat.durationUnit" : for vs0.durationUnit make vt0.durationUnit 
    "Timing.repeat.frequency" : for vs0.frequency make vt0.frequency 
    "Timing.repeat.frequencyMax" : for vs0.frequencyMax make vt0.frequencyMax 
    "Timing.repeat.period" : for vs0.period make vt0.period 
    "Timing.repeat.periodMax" : for vs0.periodMax make vt0.periodMax 
    "Timing.repeat.periodUnit" : for vs0.periodUnit make vt0.periodUnit 
    "Timing.repeat.timeOfDay" : for vs0.timeOfDay make vt0.timeOfDay 
    "Timing.repeat.offset" : for vs0.offset make vt0.offset 
  }
  "Timing.code" : for src.code make tgt.code 
endgroup

